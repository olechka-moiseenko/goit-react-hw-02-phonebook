{"version":3,"sources":["components/SearchContact/SearchContact.module.css","components/ContactForm/ContactForm.module.css","components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/SearchContact/SearchContact.js","App.js","reportWebVitals.js","index.js","components/ContactListItem/ContactListItem.module.css","App.module.css"],"names":["module","exports","ContactForm","state","name","number","handleSetInfo","e","target","value","setState","handleAddContact","preventDefault","props","handleSubmit","reset","this","onSubmit","className","s","form","label","input","autoComplete","onChange","type","pattern","title","required","btn","Component","ContactListItem","deleteContact","li","button","onClick","ContactList","contacts","handleDelete","map","id","SearchContact","inputChange","App","filter","formSubmitHandler","contact","uuidv4","find","savedContact","alert","prevState","handleSearch","contactId","getFilteredContacts","normaliseFilter","toLowerCase","includes","filteredContacts","container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77706465.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"SearchContact_title__3y4Bb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__3EjHU\",\"label\":\"ContactForm_label__3-O47\",\"input\":\"ContactForm_input__3Bv2h\",\"btn\":\"ContactForm_btn__2O5Gc\"};","import { Component } from \"react\";\r\nimport s from \"./ContactForm.module.css\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleSetInfo = (e) => {\r\n    const { name, value } = e.target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleAddContact = (e) => {\r\n    e.preventDefault();\r\n    this.props.handleSubmit(this.state);\r\n\r\n    this.reset();\r\n  };\r\n\r\n  reset = () => {\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form onSubmit={this.handleAddContact} className={s.form}>\r\n        <label className={s.label}>\r\n          <p>Name</p>\r\n          <input\r\n            className={s.input}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleSetInfo}\r\n            value={name}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n          />\r\n        </label>\r\n        <label className={s.label}>\r\n          <p>Number</p>\r\n          <input\r\n            className={s.input}\r\n            autoComplete=\"off\"\r\n            onChange={this.handleSetInfo}\r\n            value={number}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button type=\"submit\" className={s.btn}>\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import s from \"./ContactListItem.module.css\";\r\n\r\nexport default function ContactListItem({ name, number, deleteContact }) {\r\n  return (\r\n    <li className={s.li}>\r\n      {name}: {number}\r\n      <button type=\"button\" className={s.button} onClick={deleteContact}>\r\n        Delete\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import ContactListItem from \"../ContactListItem/ContactListItem.js\";\r\n\r\nexport default function ContactList({ contacts, handleDelete }) {\r\n  return (\r\n    <ul>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactListItem\r\n          key={id}\r\n          name={name}\r\n          number={number}\r\n          deleteContact={() => handleDelete(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import s from \"./SearchContact.module.css\";\r\n\r\nexport default function SearchContact({ value, inputChange }) {\r\n  return (\r\n    <label>\r\n      <title className={s.title}>Find contacts by name</title>\r\n      <input type=\"text\" value={value} onChange={inputChange} />\r\n    </label>\r\n  );\r\n}\r\n","import React, { Component } from \"react\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\nimport ContactForm from \"./components/ContactForm/ContactForm.js\";\r\nimport ContactList from \"./components/ContactList/ContactList.js\";\r\nimport SearchContact from \"./components/SearchContact/SearchContact.js\";\r\nimport s from \"./App.module.css\";\r\nclass App extends Component {\r\n  state = {\r\n    contacts: [\r\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n      { id: \"id-2\", name: \"Hermione Klinel\", number: \"443-89-12\" },\r\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n    ],\r\n    filter: \"\",\r\n  };\r\n\r\n  formSubmitHandler = ({ name, number }) => {\r\n    const contact = {\r\n      name,\r\n      number,\r\n      id: uuidv4(),\r\n    };\r\n    this.state.contacts.find((savedContact) => savedContact.name === name)\r\n      ? alert(`${name} is already in contacts`)\r\n      : this.setState((prevState) => ({\r\n          contacts: [...prevState.contacts, contact],\r\n        }));\r\n  };\r\n\r\n  handleSearch = (e) => {\r\n    this.setState({ filter: e.target.value });\r\n  };\r\n\r\n  handleDelete = (contactId) => {\r\n    this.setState((prevState) => ({\r\n      contacts: prevState.contacts.filter(\r\n        (contact) => contact.id !== contactId\r\n      ),\r\n    }));\r\n  };\r\n\r\n  getFilteredContacts = () => {\r\n    const { contacts, filter } = this.state;\r\n    const normaliseFilter = filter.toLowerCase();\r\n    return contacts.filter((contact) =>\r\n      contact.name.toLowerCase().includes(normaliseFilter)\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { filter } = this.state;\r\n    const filteredContacts = this.getFilteredContacts();\r\n\r\n    return (\r\n      <div className={s.container}>\r\n        <h1 className={s.title}>Phonebook</h1>\r\n        <ContactForm handleSubmit={this.formSubmitHandler} />\r\n\r\n        <h2>Contacts</h2>\r\n        <SearchContact value={filter} inputChange={this.handleSearch} />\r\n        <ContactList\r\n          contacts={filteredContacts}\r\n          handleDelete={this.handleDelete}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"li\":\"ContactListItem_li__11H5P\",\"button\":\"ContactListItem_button__15UK4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__2ajdb\",\"title\":\"App_title__18pUm\"};"],"sourceRoot":""}